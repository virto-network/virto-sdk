import type { Codec, Decoder, Encoder } from "./types";
export declare const createDecoder: <T>(fn: (input: Uint8Array) => T) => Decoder<T>;
export declare const createCodec: <T>(encoder: Encoder<T>, decoder: Decoder<T>) => Codec<T>;
export declare const enhanceEncoder: <I, O>(encoder: Encoder<I>, mapper: (value: O) => I) => Encoder<O>;
export declare const enhanceDecoder: <I, O>(decoder: Decoder<I>, mapper: (value: I) => O) => Decoder<O>;
export declare const enhanceCodec: <I, O>([encoder, decoder]: Codec<I>, toFrom: (value: O) => I, fromTo: (value: I) => O) => Codec<O>;
