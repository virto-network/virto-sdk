import { Codec, Decoder, Encoder } from "../types";
export declare const Tuple: {
    <A extends Codec<any>[]>(...codecs: A): Codec<{ [K in keyof A]: A[K] extends Codec<infer D> ? D : unknown; }>;
    enc: <A_1 extends Encoder<any>[]>(...encoders: A_1) => Encoder<{ [K_1 in keyof A_1]: A_1[K_1] extends Encoder<infer D_1> ? D_1 : unknown; }>;
    dec: <A_2 extends Decoder<any>[]>(...decoders: A_2) => Decoder<{ [K_2 in keyof A_2]: A_2[K_2] extends Decoder<infer D_2> ? D_2 : unknown; }>;
};
