{"version":3,"file":"pallets.mjs","sources":["../../../../src/codecs/metadata/pallets.ts"],"sourcesContent":["import { Hex, compactNumber } from \"@/codecs/scale\"\nimport { Struct, Option, Vector, u8, str, Enum, _void } from \"scale-ts\"\nimport { docs } from \"./docs\"\nimport { itemDeprecation, variantDeprecation } from \"./deprecation\"\nimport { viewFunction } from \"./runtime-api\"\n\nconst hashType = Enum({\n  Blake2128: _void,\n  Blake2256: _void,\n  Blake2128Concat: _void,\n  Twox128: _void,\n  Twox256: _void,\n  Twox64Concat: _void,\n  Identity: _void,\n})\n\nconst hashers = Vector(hashType)\n\nexport const storageMap = Struct({\n  hashers,\n  key: compactNumber,\n  value: compactNumber,\n})\n\nconst storageItem = {\n  name: str,\n  modifier: u8,\n  type: Enum({\n    plain: compactNumber,\n    map: storageMap,\n  }),\n  fallback: Hex(),\n  docs,\n}\n\nconst enumRefV14 = Option(compactNumber)\n\nexport const v14Pallet = {\n  name: str,\n  storage: Option(\n    Struct({\n      prefix: str,\n      items: Vector(Struct(storageItem)),\n    }),\n  ),\n  calls: enumRefV14,\n  events: enumRefV14,\n  constants: Vector(\n    Struct({\n      name: str,\n      type: compactNumber,\n      value: Hex(),\n      docs,\n    }),\n  ),\n  errors: enumRefV14,\n  index: u8,\n}\n\nexport const v15Pallet = {\n  ...v14Pallet,\n  docs,\n}\n\nconst enumRef = Option(\n  Struct({ type: compactNumber, deprecationInfo: variantDeprecation }),\n)\n\nexport const v16Pallet = {\n  name: str,\n  storage: Option(\n    Struct({\n      prefix: str,\n      items: Vector(\n        Struct({\n          ...storageItem,\n          deprecationInfo: itemDeprecation,\n        }),\n      ),\n    }),\n  ),\n  calls: enumRef,\n  events: enumRef,\n  constants: Vector(\n    Struct({\n      name: str,\n      type: compactNumber,\n      value: Hex(),\n      docs,\n      deprecationInfo: itemDeprecation,\n    }),\n  ),\n  errors: enumRef,\n  associatedTypes: Vector(\n    Struct({\n      name: str,\n      type: compactNumber,\n      docs,\n    }),\n  ),\n  viewFns: Vector(viewFunction),\n  index: u8,\n  docs,\n  deprecationInfo: itemDeprecation,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;AAMA,MAAM,WAAW,IAAK,CAAA;AAAA,EACpB,SAAW,EAAA,KAAA;AAAA,EACX,SAAW,EAAA,KAAA;AAAA,EACX,eAAiB,EAAA,KAAA;AAAA,EACjB,OAAS,EAAA,KAAA;AAAA,EACT,OAAS,EAAA,KAAA;AAAA,EACT,YAAc,EAAA,KAAA;AAAA,EACd,QAAU,EAAA;AACZ,CAAC,CAAA;AAED,MAAM,OAAA,GAAU,OAAO,QAAQ,CAAA;AAExB,MAAM,aAAa,MAAO,CAAA;AAAA,EAC/B,OAAA;AAAA,EACA,GAAK,EAAA,aAAA;AAAA,EACL,KAAO,EAAA;AACT,CAAC;AAED,MAAM,WAAc,GAAA;AAAA,EAClB,IAAM,EAAA,GAAA;AAAA,EACN,QAAU,EAAA,EAAA;AAAA,EACV,MAAM,IAAK,CAAA;AAAA,IACT,KAAO,EAAA,aAAA;AAAA,IACP,GAAK,EAAA;AAAA,GACN,CAAA;AAAA,EACD,UAAU,GAAI,EAAA;AAAA,EACd;AACF,CAAA;AAEA,MAAM,UAAA,GAAa,OAAO,aAAa,CAAA;AAEhC,MAAM,SAAY,GAAA;AAAA,EACvB,IAAM,EAAA,GAAA;AAAA,EACN,OAAS,EAAA,MAAA;AAAA,IACP,MAAO,CAAA;AAAA,MACL,MAAQ,EAAA,GAAA;AAAA,MACR,KAAO,EAAA,MAAA,CAAO,MAAO,CAAA,WAAW,CAAC;AAAA,KAClC;AAAA,GACH;AAAA,EACA,KAAO,EAAA,UAAA;AAAA,EACP,MAAQ,EAAA,UAAA;AAAA,EACR,SAAW,EAAA,MAAA;AAAA,IACT,MAAO,CAAA;AAAA,MACL,IAAM,EAAA,GAAA;AAAA,MACN,IAAM,EAAA,aAAA;AAAA,MACN,OAAO,GAAI,EAAA;AAAA,MACX;AAAA,KACD;AAAA,GACH;AAAA,EACA,MAAQ,EAAA,UAAA;AAAA,EACR,KAAO,EAAA;AACT;AAEO,MAAM,SAAY,GAAA;AAAA,EACvB,GAAG,SAAA;AAAA,EACH;AACF;AAEA,MAAM,OAAU,GAAA,MAAA;AAAA,EACd,OAAO,EAAE,IAAA,EAAM,aAAe,EAAA,eAAA,EAAiB,oBAAoB;AACrE,CAAA;AAEO,MAAM,SAAY,GAAA;AAAA,EACvB,IAAM,EAAA,GAAA;AAAA,EACN,OAAS,EAAA,MAAA;AAAA,IACP,MAAO,CAAA;AAAA,MACL,MAAQ,EAAA,GAAA;AAAA,MACR,KAAO,EAAA,MAAA;AAAA,QACL,MAAO,CAAA;AAAA,UACL,GAAG,WAAA;AAAA,UACH,eAAiB,EAAA;AAAA,SAClB;AAAA;AACH,KACD;AAAA,GACH;AAAA,EACA,KAAO,EAAA,OAAA;AAAA,EACP,MAAQ,EAAA,OAAA;AAAA,EACR,SAAW,EAAA,MAAA;AAAA,IACT,MAAO,CAAA;AAAA,MACL,IAAM,EAAA,GAAA;AAAA,MACN,IAAM,EAAA,aAAA;AAAA,MACN,OAAO,GAAI,EAAA;AAAA,MACX,IAAA;AAAA,MACA,eAAiB,EAAA;AAAA,KAClB;AAAA,GACH;AAAA,EACA,MAAQ,EAAA,OAAA;AAAA,EACR,eAAiB,EAAA,MAAA;AAAA,IACf,MAAO,CAAA;AAAA,MACL,IAAM,EAAA,GAAA;AAAA,MACN,IAAM,EAAA,aAAA;AAAA,MACN;AAAA,KACD;AAAA,GACH;AAAA,EACA,OAAA,EAAS,OAAO,YAAY,CAAA;AAAA,EAC5B,KAAO,EAAA,EAAA;AAAA,EACP,IAAA;AAAA,EACA,eAAiB,EAAA;AACnB;;;;"}