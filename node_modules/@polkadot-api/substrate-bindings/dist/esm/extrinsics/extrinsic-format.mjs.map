{"version":3,"file":"extrinsic-format.mjs","sources":["../../../src/extrinsics/extrinsic-format.ts"],"sourcesContent":["import { enhanceCodec, u8 } from \"scale-ts\"\n\nconst TYPES = {\n  bare: 0b00,\n  0b00: \"bare\",\n  general: 0b01,\n  0b01: \"general\",\n  signed: 0b10,\n  0b10: \"signed\",\n} as const\n\nexport type ExtrinsicFormat =\n  | { version: 4; type: \"bare\" | \"signed\" }\n  | { version: 5; type: \"bare\" | \"general\" }\n\nexport const extrinsicFormat = enhanceCodec<number, ExtrinsicFormat>(\n  u8,\n  ({ version, type }) => version + (TYPES[type] << 6),\n  (v) => {\n    const version = v & 0x3f // 0b0011_1111\n    const type = v >> 6\n    if (version === 4 && (type === TYPES.bare || type === TYPES.signed))\n      return { version, type: TYPES[type] }\n    if (version === 5 && (type === TYPES.bare || type === TYPES.general))\n      return { version, type: TYPES[type] }\n    throw new Error(`ExtrinsicFormat ${v} not valid`)\n  },\n)\n"],"names":[],"mappings":";;AAEA,MAAM,KAAQ,GAAA;AAAA,EACZ,IAAM,EAAA,CAAA;AAAA,EACN,CAAM,EAAA,MAAA;AAAA,EACN,OAAS,EAAA,CAAA;AAAA,EACT,CAAM,EAAA,SAAA;AAAA,EACN,MAAQ,EAAA,CAAA;AAAA,EACR,CAAM,EAAA;AACR,CAAA;AAMO,MAAM,eAAkB,GAAA,YAAA;AAAA,EAC7B,EAAA;AAAA,EACA,CAAC,EAAE,OAAS,EAAA,IAAA,OAAW,OAAW,IAAA,KAAA,CAAM,IAAI,CAAK,IAAA,CAAA,CAAA;AAAA,EACjD,CAAC,CAAM,KAAA;AACL,IAAA,MAAM,UAAU,CAAI,GAAA,EAAA;AACpB,IAAA,MAAM,OAAO,CAAK,IAAA,CAAA;AAClB,IAAA,IAAI,YAAY,CAAM,KAAA,IAAA,KAAS,KAAM,CAAA,IAAA,IAAQ,SAAS,KAAM,CAAA,MAAA,CAAA;AAC1D,MAAA,OAAO,EAAE,OAAA,EAAS,IAAM,EAAA,KAAA,CAAM,IAAI,CAAE,EAAA;AACtC,IAAA,IAAI,YAAY,CAAM,KAAA,IAAA,KAAS,KAAM,CAAA,IAAA,IAAQ,SAAS,KAAM,CAAA,OAAA,CAAA;AAC1D,MAAA,OAAO,EAAE,OAAA,EAAS,IAAM,EAAA,KAAA,CAAM,IAAI,CAAE,EAAA;AACtC,IAAA,MAAM,IAAI,KAAA,CAAM,CAAmB,gBAAA,EAAA,CAAC,CAAY,UAAA,CAAA,CAAA;AAAA;AAEpD;;;;"}